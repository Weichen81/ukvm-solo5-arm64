From a18244079f6338a820b612f896e56e73867f8600 Mon Sep 17 00:00:00 2001
From: Wei Chen <Jedix81@live.com>
Date: Thu, 22 Dec 2016 07:01:23 +0000
Subject: [PATCH] Add arm64 support

Signed-off-by: Wei Chen <Jedix81@live.com>
---
 Makefile                    |  4 +--
 config/Makefile.Linux.arm64 | 78 +++++++++++++++++++++++++++++++++++++++++++++
 config/m.arm64.h            | 10 ++++++
 nolibc/include/endian.h     |  2 ++
 nolibc/include/limits.h     |  2 +-
 openlibm/Make.inc           |  6 ++--
 6 files changed, 96 insertions(+), 6 deletions(-)
 create mode 100644 config/Makefile.Linux.arm64
 create mode 100644 config/m.arm64.h

diff --git a/Makefile b/Makefile
index e00f37d..db4a26a 100644
--- a/Makefile
+++ b/Makefile
@@ -27,8 +27,8 @@ build/ocaml/Makefile:

 build/ocaml/config/Makefile: build/ocaml/Makefile
 	cp config/s.h build/ocaml/config/s.h
-	cp config/m.x86_64.h build/ocaml/config/m.h
-	cp config/Makefile.$(shell uname -s).x86_64 build/ocaml/config/Makefile
+	cp config/m.arm64.h build/ocaml/config/m.h
+	cp config/Makefile.$(shell uname -s).arm64 build/ocaml/config/Makefile

 # Needed for OCaml >= 4.03.0, triggered by OCAML_EXTRA_DEPS via Makeconf
 build/ocaml/byterun/caml/version.h: build/ocaml/config/Makefile
diff --git a/config/Makefile.Linux.arm64 b/config/Makefile.Linux.arm64
new file mode 100644
index 0000000..fd7409a
--- /dev/null
+++ b/config/Makefile.Linux.arm64
@@ -0,0 +1,78 @@
+# generated by ./configure
+PREFIX=/usr
+BINDIR=$(PREFIX)/bin
+LIBDIR=$(PREFIX)/lib/ocaml
+STUBLIBDIR=$(LIBDIR)/stublibs
+MANDIR=$(PREFIX)/man
+MANEXT=1
+RANLIB=ranlib
+RANLIBCMD=ranlib
+ARCMD=ar
+SHARPBANGSCRIPTS=true
+BNG_ARCH=generic
+BNG_ASM_LEVEL=0
+PTHREAD_LINK=-cclib -lpthread
+X11_INCLUDES=
+X11_LINK=-lX11
+TK_DEFS=
+TK_LINK=
+LIBBFD_LINK=
+BYTECC=gcc
+BYTECCCOMPOPTS=-fno-defer-pop -Wall -D_FILE_OFFSET_BITS=64 -D_REENTRANT
+#BYTECCCOMPOPTS=-std=gnu99 -O2 -fno-strict-aliasing -fwrapv -Wall -D_FILE_OFFSET_BITS=64 -D_REENTRANT
+BYTECCLINKOPTS= -Wl,-E
+BYTECCLIBS= -lm  -ldl -lcurses -lpthread
+BYTECCRPATH=-Wl,-rpath,
+EXE=
+SUPPORTS_SHARED_LIBRARIES=true
+SHAREDCCCOMPOPTS=-fPIC
+MKSHAREDLIBRPATH=-Wl,-rpath,
+NATDYNLINKOPTS=-Wl,-E
+SYSLIB=-l$(1)
+#ml let syslib x = "-l"^x;;
+
+### How to build a static library
+MKLIB=ar rc $(1) $(2); ranlib $(1)
+#ml let mklib out files opts = Printf.sprintf "ar rc %s %s %s; ranlib %s" out opts files out;;
+ARCH=arm64
+MODEL=default
+SYSTEM=aarch64-linux-gnu
+NATIVECC=gcc
+NATIVECCCOMPOPTS=-Wall -D_FILE_OFFSET_BITS=64 -D_REENTRANT
+NATIVECCPROFOPTS=-Wall -D_FILE_OFFSET_BITS=64 -D_REENTRANT
+NATIVECCLINKOPTS=
+NATIVECCRPATH=-Wl,-rpath,
+NATIVECCLIBS= -lm  -ldl
+ASM=as
+ASPP=gcc -c
+ASPPPROFFLAGS=-DPROFILING
+PROFILING=prof
+DYNLINKOPTS= -ldl
+OTHERLIBRARIES=unix str num dynlink bigarray systhreads threads graph
+DEBUGGER=ocamldebugger
+CC_PROFILE=-pg
+SYSTHREAD_SUPPORT=true
+PARTIALLD=ld -r
+PACKLD=$(PARTIALLD) $(NATIVECCLINKOPTS) -o\
+DLLCCCOMPOPTS=
+IFLEXDIR=
+O=o
+A=a
+SO=so
+EXT_OBJ=.o
+EXT_ASM=.s
+EXT_LIB=.a
+EXT_DLL=.so
+EXTRALIBS=
+CCOMPTYPE=cc
+TOOLCHAIN=cc
+NATDYNLINK=true
+CMXS=cmxs
+MKEXE=$(BYTECC)
+MKEXEDEBUGFLAG=-g
+MKDLL=gcc -shared
+MKMAINDLL=gcc -shared
+RUNTIMED=noruntimed
+CAMLP4=camlp4
+ASM_CFI_SUPPORTED=true
+WITH_FRAME_POINTERS=false
diff --git a/config/m.arm64.h b/config/m.arm64.h
new file mode 100644
index 0000000..94119bf
--- /dev/null
+++ b/config/m.arm64.h
@@ -0,0 +1,10 @@
+#define ARCH_SIXFOUR
+#define ARCH_ALIGN_DOUBLE
+#define SIZEOF_INT 4
+#define SIZEOF_LONG 8
+#define SIZEOF_PTR 8
+#define SIZEOF_SHORT 2
+#define ARCH_INT64_TYPE long
+#define ARCH_UINT64_TYPE unsigned long
+#define ARCH_INT64_PRINTF_FORMAT "l"
+#define ARCH_ALIGN_INT64
diff --git a/nolibc/include/endian.h b/nolibc/include/endian.h
index 28f4f6a..44bcf07 100644
--- a/nolibc/include/endian.h
+++ b/nolibc/include/endian.h
@@ -5,6 +5,8 @@
 #define __BIG_ENDIAN 4321
 #if defined(__x86_64__)
 #define __BYTE_ORDER __LITTLE_ENDIAN
+#elif defined(__aarch64__)
+#define __BYTE_ORDER __LITTLE_ENDIAN
 #else
 #error Unsupported architecture
 #endif
diff --git a/nolibc/include/limits.h b/nolibc/include/limits.h
index fa3e2fe..1579fab 100644
--- a/nolibc/include/limits.h
+++ b/nolibc/include/limits.h
@@ -3,7 +3,7 @@

 #define INT_MAX  0x7fffffff
 #define INT_MIN  (-1-0x7fffffff)
-#if defined(__x86_64__)
+#if defined(__x86_64__) || (__aarch64__)
 #define LONG_MAX  0x7fffffffffffffffL
 #define LLONG_MAX  0x7fffffffffffffffLL
 #else
diff --git a/openlibm/Make.inc b/openlibm/Make.inc
index b7903cc..1078bef 100644
--- a/openlibm/Make.inc
+++ b/openlibm/Make.inc
@@ -144,9 +144,9 @@ LDFLAGS_add_TARGET_x86_64 := -m64
 # Arm
 ifeq ($(ARCH),arm)
 ifneq ($(REAL_ARCH),arm)
-CFLAGS_add_TARGET_$(ARCH)  := -march=$(REAL_ARCH)
-SFLAGS_add_TARGET_$(ARCH)  := -march=$(REAL_ARCH)
-LDFLAGS_add_TARGET_$(ARCH) := -march=$(REAL_ARCH)
+CFLAGS_add_TARGET_$(ARCH)  := -march=armv8-a
+SFLAGS_add_TARGET_$(ARCH)  := -march=armv8-a
+LDFLAGS_add_TARGET_$(ARCH) := -march=armv8-a
 else
 $(error No known generic arm cflags. Please specify arch type)
 endif
--
2.7.4

